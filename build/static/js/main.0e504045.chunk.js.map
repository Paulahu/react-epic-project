{"version":3,"sources":["models/index.js","components/Header.js","components/Footer.js","components/Loading.js","App.js","serviceWorker.js","index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js","components/flower.png"],"names":["AV","init","appId","appKey","serverURL","Auth","register","username","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","then","loginedUser","error","login","logIn","logout","logOut","getCurrentUser","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","find","page","limit","query","Query","include","skip","equalTo","descending","results","catch","deleteItem","id","todo","createWithoutData","destroy","console","log","window","Header","styled","header","Logo","img","StyledLink","NavLink","StyledALink","a","Login","div","StyledButton","Button","Component","observer","useStores","UserStore","AuthStore","history","useHistory","src","LogoURL","to","activeClassName","exact","target","href","currentUser","attributes","type","onClick","push","Footer","footer","Title","Home","lazy","History","Register","App","fallback","Loading","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","this","observable","action","newList","list","concat","isLoading","append","length","hasMore","finally","newFilename","newFile","isUploading","isLogin","values","pullUser","resetUser","HistoryStore","reset","ImageStore","context","createContext","stores","useContext","module","exports"],"mappings":"+HAAA,yFAEAA,IAAGC,KAAK,CACNC,MAAO,oCACPC,OAAQ,2BACRC,UAAW,yCAGb,IAAMC,EAAO,CACXC,SADW,SACFC,EAAUC,GACjB,IAAIC,EAAO,IAAIC,OAGf,OAFAD,EAAKE,YAAYJ,GACjBE,EAAKG,YAAYJ,GACV,IAAIK,SAAQ,SAACC,EAASC,GAC3BN,EAAKO,SAASC,MAAK,SAAAC,GACjBJ,EAAQI,MACP,SAAAC,GACDJ,EAAOI,UAKbC,MAdW,SAcLb,EAAUC,GACd,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BL,OAAKW,MAAMd,EAAUC,GAAUS,MAAK,SAAAC,GAChCJ,EAAQI,MACP,SAAAC,GACDJ,EAAOI,UAMfG,OAzBW,WA0BTZ,OAAKa,UAGPC,eA7BW,WA8BT,OAAOd,OAAKe,YAIVC,EAAW,CACfC,IADe,SACXC,EAAMC,GACR,IAAMC,EAAO,IAAI9B,IAAG+B,OAAO,SACrBC,EAAS,IAAIhC,IAAGiC,KAAKJ,EAASD,GAIpC,OAHAE,EAAKI,IAAI,WAAWL,GACpBC,EAAKI,IAAI,QAAQlC,IAAGU,KAAKe,WACzBK,EAAKI,IAAI,MAAMF,GACR,IAAInB,SAAQ,SAACC,EAASC,GAC3Be,EAAKK,OAAOlB,MAAK,SAACmB,GAChBtB,EAAQsB,MACP,SAAAjB,GACDJ,EAAOI,UAIbkB,KAfe,YAeW,IAAD,IAAnBC,YAAmB,MAAd,EAAc,MAAXC,aAAW,MAAL,GAAK,EACjBC,EAAQ,IAAIxC,IAAGyC,MAAM,SAM3B,OALAD,EAAME,QAAQ,SACdF,EAAMD,MAAMA,GACZC,EAAMG,KAAKL,EAAKC,GAChBC,EAAMI,QAAQ,QAAS5C,IAAGU,KAAKe,WAC/Be,EAAMK,WAAW,aACV,IAAIhC,SAAQ,SAACC,EAASC,GAC3ByB,EAAMH,OACHpB,MAAK,SAAA6B,GAAO,OAAIhC,EAAQgC,MACxBC,OAAM,SAAA5B,GAAK,OAAIJ,EAAOI,UAG7B6B,WA5Be,SA4BJC,GACT,IAAMC,EAAOlD,IAAG+B,OAAOoB,kBAAkB,QAASF,GAElD,OADAC,EAAKE,UACE,IAAIvC,SAAQ,SAACC,EAASC,GAC3BmC,EAAKE,UACFnC,MAAK,SAAA6B,GAAO,OAAGhC,EAAQgC,EAAQO,QAAQC,IAAI,gCAC3CP,OAAO,SAAA5B,GAAK,OAAIJ,EAAOI,WAKhCoC,OAAO7B,SAAWA,G,2gCCzElB,IAAM8B,EAASC,IAAOC,OAAV,KAMNC,EAAOF,IAAOG,IAAV,KAGJC,EAAaJ,YAAOK,IAAPL,CAAH,KASVM,EAAcN,IAAOO,EAAV,KASXC,EAAQR,IAAOS,IAAV,KAKLC,EAAeV,YAAOW,IAAPX,CAAH,KA8CHY,EA1CGC,aAAS,WAAO,IAAD,EACAC,cAAxBC,EADwB,EACxBA,UAAWC,EADa,EACbA,UACZC,EAAUC,cAgBhB,OACE,kBAACnB,EAAD,KACE,kBAACG,EAAD,CAAMiB,IAAKC,MACX,6BACE,kBAAChB,EAAD,CAAYiB,GAAG,IAAIC,gBAAgB,SAASC,OAAK,GAAjD,gBACA,kBAACnB,EAAD,CAAYiB,GAAG,WAAWC,gBAAgB,UAA1C,4BACA,kBAAChB,EAAD,CAAakB,OAAO,SAASC,KAAK,6BAA6BH,gBAAgB,UAA/E,UACA,kBAAChB,EAAD,CAAakB,OAAO,SAASC,KAAK,wDAAwDH,gBAAgB,UAA1G,SAEF,kBAACd,EAAD,KAEIO,EAAUW,YAAc,oCACrBX,EAAUW,YAAYC,WAAW7E,SADZ,IACsB,kBAAC4D,EAAD,CAAckB,KAAK,UACLC,QA3B/C,WACnBb,EAAUnD,WAyB0C,iBAExC,oCACJ,kBAAC6C,EAAD,CAAckB,KAAK,UAAUC,QAzBnB,WAClBjC,QAAQC,IAAI,8CACZoB,EAAQa,KAAK,aAuBL,gBACA,kBAACpB,EAAD,CAAckB,KAAK,UAAUC,QArBhB,WACrBjC,QAAQC,IAAI,8CACZoB,EAAQa,KAAK,eAmBL,sB,sOC3EZ,IAAMC,EAAS/B,IAAOgC,OAAV,KAKNC,EAAQjC,IAAOS,IAAV,KAaIG,MARf,WACE,OACE,kBAACmB,EAAD,KACE,kBAACE,EAAD,uCCdS,aACZ,OACE,4CCYCC,EAAOC,gBAAK,kBAAK,4EACjBC,EAAUD,gBAAK,kBAAK,8DAEpB3B,GADQ2B,gBAAK,kBAAK,kCACVA,gBAAK,kBAAK,+DAClBE,EAAWF,gBAAK,kBAAK,+DAsBZG,MApBf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,8BACE,kBAAC,WAAD,CAAUC,SAAU,kBAACC,EAAD,OAApB,IACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIlB,OAAK,EAACmB,UAAWR,IACjC,kBAAC,IAAD,CAAOO,KAAK,WAAWC,UAAWN,IAElC,kBAAC,IAAD,CAAOK,KAAK,SAASC,UAAWlC,IAChC,kBAAC,IAAD,CAAOiC,KAAK,YAAYC,UAAWL,OAIvC,kBAAC,EAAD,Q,aCzBcM,QACW,cAA7B7C,OAAO8C,SAASC,UAEe,UAA7B/C,OAAO8C,SAASC,UAEhB/C,OAAO8C,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,UACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9F,MAAK,SAAA+F,GACJA,EAAaC,gBAEdlE,OAAM,SAAA5B,GACLkC,QAAQlC,MAAMA,EAAM+F,a,kKExHb,M,4IATXC,KAAKhC,YAAc9E,IAAKmB,mB,kCAIxB2F,KAAKhC,YAAc,S,8CAPpBiC,K,yEAAyB,Q,oCAEzBC,K,0GAIAA,K,kFCoCY,M,2LAtCb9E,MAAQ,G,mDAEO+E,GACbH,KAAKI,KAAOJ,KAAKI,KAAKC,OAAOF,K,6BAGf,IAAD,OACbH,KAAKM,WAAY,EACjB/F,IAASW,KAAK,CAACC,KAAM6E,KAAK7E,KAAMC,MAAO4E,KAAK5E,QACzCtB,MAAK,SAAAqG,GACJ,EAAKI,OAAOJ,GACZ,EAAKhF,OACFgF,EAAQK,OAAS,EAAKpF,QACvB,EAAKqF,SAAU,MAEhB7E,OAAM,SAAA5B,GACT+F,IAAQ/F,MAAM,2CACb0G,SAAQ,WACT,EAAKJ,WAAY,O,6BAINxE,GACbvB,IAASsB,WAAWC,GACjBhC,KAAMoC,QAAQC,IAAR,8BAAoBL,EAApB,wBACNF,OAAM,SAAA5B,GAAK,OAAI+F,IAAQ/F,MAAM,6C,8BAIhCgG,KAAKI,KAAO,GACZJ,KAAKM,WAAY,EACjBN,KAAKS,SAAU,EACfT,KAAK7E,KAAO,M,uCApCb8E,K,wEAAkB,M,uCAClBA,K,yEAAuB,K,qCACvBA,K,yEAAqB,K,kCACrBA,K,yEAAkB,K,kCAGlBC,K,mGAIAA,K,mGAgBAA,K,oGAMAA,K,qECKY,M,uPA/BOS,GAClBX,KAAKtF,SAAWiG,I,8BAGFC,GACdZ,KAAKvF,KAAOmG,I,+BAGI,IAAD,OAGf,OAFAZ,KAAKa,aAAc,EACnBb,KAAK/E,WAAa,KACX,IAAIvB,SAAS,SAACC,EAASC,GAC5BW,IAASC,IAAI,EAAKC,KAAM,EAAKC,UAC1BZ,MAAK,SAAAmB,GACJ,EAAKA,WAAaA,EAClBtB,EAAQsB,MACPW,OAAM,SAAA5B,GACT+F,IAAQ/F,MAAM,wCACZJ,EAAOI,MACN0G,SAAQ,WACT,EAAKG,aAAc,U,8BAM3Bb,KAAKa,aAAc,EACnBb,KAAK/E,WAAa,S,2CAhCjBgF,K,wEAAsB,M,kCACtBA,K,yEAAkB,Q,yCAClBA,K,yEAAyB,K,wCACzBA,K,yEAAwB,Q,uCAExBC,K,2GAIAA,K,sGAIAA,K,oGAiBAA,K,qECkCY,M,+MApDMY,GACjBd,KAAKc,QAAUA,I,kCAGG1H,GAClB4G,KAAKe,OAAO3H,SAAWA,I,kCAGLC,GAClB2G,KAAKe,OAAO1H,SAAWA,I,8BAGR,IAAD,OACd,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BV,IAAKe,MAAM,EAAK8G,OAAO3H,SAAU,EAAK2H,OAAO1H,UAC1CS,MAAK,SAAAR,GACJ+D,EAAU2D,WACVrH,EAAQL,MAETsC,OAAM,SAAA5B,GACLqD,EAAU4D,YACVlB,IAAQ/F,MAAM,4BACdJ,EAAOI,W,iCAKK,IAAD,OACjB,OAAO,IAAIN,SAAQ,SAACC,EAASC,GAC3BV,IAAKC,SAAS,EAAK4H,OAAO3H,SAAU,EAAK2H,OAAO1H,UAC7CS,MAAK,SAAAR,GACJ+D,EAAU2D,WACVrH,EAAQL,MAETsC,OAAM,SAAA5B,GACLqD,EAAU4D,YACVlB,IAAQ/F,MAAM,4BACdJ,EAAOI,W,+BAMbd,IAAKiB,SACLkD,EAAU4D,YACVC,EAAaC,QACbC,EAAWD,Y,0CAvDZlB,K,yEAAqB,K,uCACrBA,K,yEAAuB,K,oCACvBA,K,wEAAoB,CACnB7G,SAAU,GACVC,SAAU,O,sCAKX6G,K,8GAIAA,K,+GAIAA,K,yGAIAA,K,sGAeAA,K,uGAeAA,K,sECtDGmB,EAAUC,wBAAc,CAC5BhE,YACAD,YACA+D,aACAF,iBAGF9E,OAAOmF,OAAS,CACdjE,YACAD,YACA+D,aACAF,gBAGK,IAAM9D,EAAY,kBAAMoE,qBAAWH,K,mBCpB1CI,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.0e504045.chunk.js","sourcesContent":["import AV, {Query, User} from 'leancloud-storage'\n\nAV.init({\n  appId: 'mKBoPo3JbzfS3F25F87Qi78q-gzGzoHsz',\n  appKey: 'tik25FdYrwTKjktccMJlShuT',\n  serverURL: 'https://mkbopo3j.lc-cn-n1-shared.com'\n})\n\nconst Auth = {\n  register(username, password) {\n    let user = new User()\n    user.setUsername(username)\n    user.setPassword(password)\n    return new Promise((resolve, reject) => {\n      user.signUp().then(loginedUser => {\n        resolve(loginedUser)\n      }, error => {\n        reject(error)\n      })\n    })\n  },\n\n  login(username, password) {\n    return new Promise((resolve, reject) => {\n      User.logIn(username, password).then(loginedUser => {\n          resolve(loginedUser)\n        }, error => {\n          reject(error)\n        }\n      )\n    })\n  },\n\n  logout() {\n    User.logOut()\n  },\n\n  getCurrentUser() {\n    return User.current()\n  }\n}\n\nconst Uploader = {\n  add(file, filename) {\n    const item = new AV.Object('Image')\n    const avFile = new AV.File(filename,file)\n    item.set('filename',filename)\n    item.set('owner',AV.User.current())\n    item.set('url',avFile)\n    return new Promise((resolve, reject) => {\n      item.save().then((serverFile) => {\n        resolve(serverFile)\n      }, error => {\n        reject(error)\n      })\n    })\n  },\n  find({page=0, limit=10}) {\n    const query = new AV.Query('Image')\n    query.include('owner')\n    query.limit(limit)\n    query.skip(page*limit)\n    query.equalTo('owner', AV.User.current())\n    query.descending('createdAt')\n    return new Promise((resolve, reject) => {\n      query.find()\n        .then(results => resolve(results))\n        .catch(error => reject(error))\n    })\n  },\n  deleteItem(id) {\n    const todo = AV.Object.createWithoutData('Image', id)\n    todo.destroy()\n    return new Promise((resolve, reject) => {\n      todo.destroy()\n        .then(results=> resolve(results,console.log('删除对象')))\n        .catch( error => reject(error))\n    })\n  }\n}\n\nwindow.Uploader = Uploader\n\n\nexport {\n  Auth,\n  Uploader\n}","import React, {useState} from 'react'\nimport LogoURL from './flower.png'\nimport {NavLink, useHistory} from 'react-router-dom'\nimport styled from 'styled-components'\nimport {Button} from 'antd'\nimport {useStores} from '../stores'\nimport {observer} from 'mobx-react'\n\nconst Header = styled.header`\n  background-color: #02101f;\n  display:flex;\n  align-items:center;\n  padding: 10px 100px;\n`\nconst Logo = styled.img`\n  height:30px;\n`\nconst StyledLink = styled(NavLink)`\n  color:#fff;\n  margin-left: 40px;\n  font-size:15px;\n  &.active {\n    border-bottom:1px solid #fff;\n  }\n \n`\nconst StyledALink = styled.a`\n  color:#fff;\n  margin-left: 40px;\n  font-size:15px;\n  &.active {\n    border-bottom:1px solid #fff;\n  }\n`\n\nconst Login = styled.div`\n  margin-left: auto;\n  color: #fff\n`\n\nconst StyledButton = styled(Button)`\n  margin-left: 20px\n`\n\nconst Component = observer(() => {\n  const {UserStore, AuthStore} = useStores()\n  const history = useHistory()\n\n  const handleLogout = () => {\n    AuthStore.logout()\n  }\n\n  const handleLogin = () => {\n    console.log('跳转到登录页面')\n    history.push('./login')\n  }\n\n  const handleRegister = () => {\n    console.log('跳转到注册页面')\n    history.push('/register')\n  }\n\n  return (\n    <Header>\n      <Logo src={LogoURL}/>\n      <nav>\n        <StyledLink to='/' activeClassName='active' exact>首页</StyledLink>\n        <StyledLink to='/history' activeClassName='active'>上传历史</StyledLink>\n        <StyledALink target=\"_blank\" href='https://github.com/Paulahu' activeClassName='active'>Github</StyledALink>\n        <StyledALink target=\"_blank\" href='https://juejin.im/user/5e609571f265da57337d0ebe/posts' activeClassName='active'>Blog</StyledALink>\n      </nav>\n      <Login>\n        {\n          UserStore.currentUser ? <>\n            {UserStore.currentUser.attributes.username} <StyledButton type=\"primary\"\n                                                                      onClick={handleLogout}>注销</StyledButton>\n          </> : <>\n            <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\n            <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\n          </>\n        }\n      </Login>\n    </Header>\n  )\n})\n\nexport default Component","import React from 'react'\nimport styled from 'styled-components'\n\nconst Footer = styled.footer`\n  padding: 10px 100px;\n  text-align: center;\n\n`\nconst Title = styled.div`\n  font-size: 15px;\n  color: #e8eaed;\n`\n\nfunction Component() {\n  return (\n    <Footer>\n      <Title>Copyright © 2020 Paula Hu</Title>\n    </Footer>\n  )\n}\n\nexport default Component","import React from 'react'\r\n\r\nexport default function () {\r\n   return (\r\n     <div>Loading...</div>\r\n   )\r\n}","import React, {Suspense, lazy} from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Loading from './components/Loading'\n\nimport {\n  Switch,\n  Route\n} from 'react-router-dom'\n\n// import Home from './pages/Homes'\n// import History from './pages/History'\n// import About from './pages/About'\n\n//懒加载模块\nconst Home = lazy(()=> import('./pages/Homes'))\nconst History = lazy(()=> import('./pages/History'))\nconst About = lazy(()=> import('./pages/About'))\nconst Login = lazy(()=> import('./pages/Login'))\nconst Register = lazy(()=> import('./pages/Register'))\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <main>\n        <Suspense fallback={<Loading />}> {/*完整组件写法*/}\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/history' component={History} />\n          {/*<Route path='/about' component={About} />*/}\n          <Route path='/login' component={Login} />\n          <Route path='/register' component={Register} />\n        </Switch>\n        </Suspense>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'antd/dist/antd.css';\nimport Model from './models'\nimport * as serviceWorker from './serviceWorker'\nimport {\n  HashRouter\n} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>  {/*用router监控所有的组件*/}\n      <App/>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import {observable, action} from 'mobx'\nimport {Auth} from '../models'\n\nclass UserStore {\n  //状态\n  @observable currentUser = null\n\n  @action pullUser() {\n    this.currentUser = Auth.getCurrentUser()\n  }\n\n  @action resetUser() {\n    this.currentUser = null\n  }\n\n}\n\nexport default new UserStore()  //直接导出一个对象","import { observable, action } from 'mobx';\nimport { Uploader } from '../models';\nimport { message } from 'antd';\n\nclass HistoryStore {\n  @observable list = [];\n  @observable isLoading = false;\n  @observable hasMore = true;\n  @observable page = 0;\n  limit = 10;\n\n  @action append(newList) {\n    this.list = this.list.concat(newList);\n  }\n\n  @action find() {\n    this.isLoading = true;\n    Uploader.find({page: this.page, limit: this.limit})\n      .then(newList => {\n        this.append(newList);\n        this.page++;\n        if(newList.length < this.limit) {\n          this.hasMore = false;\n        }\n      }).catch(error => {\n      message.error('加载数据失败');\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  }\n\n  @action delete(id) {\n    Uploader.deleteItem(id)\n      .then( console.log(`删除id为${id}的元素`) )\n      .catch(error => message.error('删除元素失败'))\n  }\n\n  @action reset() {\n    this.list = [];\n    this.isLoading = false;\n    this.hasMore = true;\n    this.page = 0;\n  }\n\n}\n\n\nexport default new HistoryStore();","import {observable, action} from 'mobx'\nimport {Auth, Uploader} from '../models'\nimport { message } from 'antd'\n\nclass ImageStore {\n  //状态\n  @observable filename = ''\n  @observable file = null\n  @observable isUploading = false\n  @observable serverFile = null\n\n  @action setFilename(newFilename) {\n    this.filename = newFilename\n  }\n\n  @action setFile(newFile) {\n    this.file = newFile\n  }\n\n  @action upLoad() {\n    this.isUploading = true\n    this.serverFile = null\n    return new Promise(((resolve, reject) => {\n      Uploader.add(this.file, this.filename)\n        .then(serverFile => {\n          this.serverFile = serverFile\n          resolve(serverFile)\n        }).catch(error => {\n        message.error('图片上传失败')\n          reject(error)\n        }).finally(()=> {\n          this.isUploading = false\n      })\n    }))\n  }\n\n  @action reset() {\n  this.isUploading = false\n  this.serverFile = null\n  }\n}\n\nexport default new ImageStore()","import {observable, action} from 'mobx'\nimport {Auth} from '../models'\nimport UserStore from './user'\nimport HistoryStore from './history'\nimport ImageStore from './image'\nimport { message } from 'antd'\n\nclass AuthStore {\n  //状态\n  @observable isLogin = false\n  @observable isLoading = false\n  @observable values = {\n    username: '',\n    password: ''\n  }\n\n  //管理状态的行为\n\n  @action setIsLogin(isLogin) {\n    this.isLogin = isLogin\n  }\n\n  @action setUsername(username) {\n    this.values.username = username\n  }\n\n  @action setPassword(password) {\n    this.values.password = password\n  }\n\n  @action login() {\n    return new Promise((resolve, reject) => {\n      Auth.login(this.values.username, this.values.password)\n        .then(user => {\n          UserStore.pullUser()\n          resolve(user)\n        })\n        .catch(error => {\n          UserStore.resetUser()\n          message.error('登录失败')\n          reject(error)\n        })\n    })\n  }\n\n  @action register() {\n    return new Promise((resolve, reject) => {\n      Auth.register(this.values.username, this.values.password)\n        .then(user => {\n          UserStore.pullUser()\n          resolve(user)\n        })\n        .catch(error => {\n          UserStore.resetUser()\n          message.error('注册失败')\n          reject(error)\n        })\n    })\n  }\n\n  @action logout() {\n    Auth.logout()\n    UserStore.resetUser()\n    HistoryStore.reset()\n    ImageStore.reset()\n  }\n\n}\n\n\nexport default new AuthStore()\n","import React, {createContext, useContext} from 'react'\nimport AuthStore from './auth'\nimport UserStore from './user'\nimport ImageStore from './image'\nimport HistoryStore from './history'\n\nconst context = createContext({\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n})\n\nwindow.stores = {\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n}   //测试Header中，这个对象的结构\n\nexport const useStores = () => useContext(context) //导出一个函数，当别人import时得到useStores，就相当于调用这个函数，就会得到AuthStore","module.exports = __webpack_public_path__ + \"static/media/flower.7bdaa3f2.png\";"],"sourceRoot":""}